<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 스프링시큐리티 설정처리
	     security-context.xml -->
	     
	<!-- 외부사용 객체(빈)를 등록 -->
	<bean id="customAccessDenied" 
	 class="com.itwillbs.security.CustomAccessDeniedHandler" />     
	<bean id="customLoginSuccess" 
	   class="com.itwillbs.security.CustomLoginSuccessHandler" /> 

<!-- 
	<bean id="customNoopPasswordEncoder" 
		class="com.itwillbs.security.CustomNoopPasswordEncoder"/>     
 -->
 
 	    
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />    
	    
	     
	<security:http>
		<!-- p673 시큐리티 표현식 -->
		<security:intercept-url pattern="/sample/all"  access="permitAll"/>
		<security:intercept-url pattern="/sample/member"  access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/sample/admin"  access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/sample/board/*"  access="hasRole('ROLE_ADMIN')"/>
	
		<!-- (기본)로그인 페이지 설정 -->
<!-- 		<security:form-login />	 -->
		<security:form-login  login-page="/customLogin" 
		  authentication-success-handler-ref="customLoginSuccess"
		                        />	
		                        
		<!-- 로그아웃 페이지 설정 -->
		<security:logout logout-url="/customLogout" 
		                 invalidate-session="true" />                        
		
		
		<!-- 권한없이 접근할때 에러처리 -->
		<!-- <security:access-denied-handler 
		          error-page="/accessErr"/> -->
		<security:access-denied-handler 
		          ref="customAccessDenied"/>
		
	</security:http>     
	
	
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
					users-by-username-query="select userid, userpw, enabled from tbl_member where userid=?"
					authorities-by-username-query="select userid, auth from tbl_member_auth where userid=?"
					/>
			
			
			
			
			<!-- 비밀번호 암호화 처리(임시) -->
			<!-- <security:password-encoder ref="customNoopPasswordEncoder"/> -->
			<security:password-encoder ref="bcryptPasswordEncoder"/>
			
		
			<!-- <security:user-service>
				접근 가능한 사용자 정보 생성
				<security:user name="member" password="1234"  authorities="ROLE_MEMBER"/>
				임시로 비밀번호를 암호화 없이 사용하도록 설정
				<security:user name="member" password="{noop}1234"  authorities="ROLE_MEMBER"/>
				<security:user name="admin"  password="{noop}1234"  authorities="ROLE_MEMBER, ROLE_ADMIN"/>
				
			</security:user-service>	 -->
		</security:authentication-provider>	
	</security:authentication-manager>

</beans>
